{"results": [{"changed": true, "stdout": "\nadded 716 packages, and audited 717 packages in 4s\n\n58 packages are looking for funding\n  run `npm fund` for details\n\nfound 0 vulnerabilities", "stderr": "npm WARN EBADENGINE Unsupported engine {\nnpm WARN EBADENGINE   package: 'api-testing-example@1.0.0',\nnpm WARN EBADENGINE   required: { node: '=16.6.2' },\nnpm WARN EBADENGINE   current: { node: 'v19.8.1', npm: '9.5.1' }\nnpm WARN EBADENGINE }\nnpm WARN deprecated source-map-url@0.4.1: See https://github.com/lydell/source-map-url#deprecated\nnpm WARN deprecated urix@0.1.0: Please see https://github.com/lydell/urix#deprecated\nnpm WARN deprecated resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecated\nnpm WARN deprecated source-map-resolve@0.5.3: See https://github.com/lydell/source-map-resolve#deprecated\nnpm WARN deprecated w3c-hr-time@1.0.2: Use your platform's native performance.now() and performance.timeOrigin.\nnpm WARN deprecated sane@4.1.0: some dependency vulnerabilities fixed, support for node < 10 dropped, and newer ECMAScript syntax/features added", "rc": 0, "cmd": "npm ci --ignore-scripts", "start": "2023-03-25 13:54:57.512356", "end": "2023-03-25 13:55:01.472913", "delta": "0:00:03.960557", "msg": "", "invocation": {"module_args": {"chdir": "/home/vagrant/valid-project", "_raw_params": "npm ci --ignore-scripts", "_uses_shell": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "executable": null, "creates": null, "removes": null, "stdin": null}}, "stdout_lines": ["", "added 716 packages, and audited 717 packages in 4s", "", "58 packages are looking for funding", "  run `npm fund` for details", "", "found 0 vulnerabilities"], "stderr_lines": ["npm WARN EBADENGINE Unsupported engine {", "npm WARN EBADENGINE   package: 'api-testing-example@1.0.0',", "npm WARN EBADENGINE   required: { node: '=16.6.2' },", "npm WARN EBADENGINE   current: { node: 'v19.8.1', npm: '9.5.1' }", "npm WARN EBADENGINE }", "npm WARN deprecated source-map-url@0.4.1: See https://github.com/lydell/source-map-url#deprecated", "npm WARN deprecated urix@0.1.0: Please see https://github.com/lydell/urix#deprecated", "npm WARN deprecated resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecated", "npm WARN deprecated source-map-resolve@0.5.3: See https://github.com/lydell/source-map-resolve#deprecated", "npm WARN deprecated w3c-hr-time@1.0.2: Use your platform's native performance.now() and performance.timeOrigin.", "npm WARN deprecated sane@4.1.0: some dependency vulnerabilities fixed, support for node < 10 dropped, and newer ECMAScript syntax/features added"], "failed": false, "item": [{"name": "dependencies", "jobs": [{"name": "clean install", "cmd": "npm ci --ignore-scripts"}, {"name": "check vulnerable dependencies", "cmd": "npm audit"}, {"name": "check coding style", "cmd": "npm run lint"}]}, {"name": "clean install", "cmd": "npm ci --ignore-scripts"}], "ansible_loop_var": "item"}, {"changed": true, "stdout": "found 0 vulnerabilities", "stderr": "", "rc": 0, "cmd": "npm audit", "start": "2023-03-25 13:55:01.703555", "end": "2023-03-25 13:55:03.014490", "delta": "0:00:01.310935", "msg": "", "invocation": {"module_args": {"chdir": "/home/vagrant/valid-project", "_raw_params": "npm audit", "_uses_shell": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "executable": null, "creates": null, "removes": null, "stdin": null}}, "stdout_lines": ["found 0 vulnerabilities"], "stderr_lines": [], "failed": false, "item": [{"name": "dependencies", "jobs": [{"name": "clean install", "cmd": "npm ci --ignore-scripts"}, {"name": "check vulnerable dependencies", "cmd": "npm audit"}, {"name": "check coding style", "cmd": "npm run lint"}]}, {"name": "check vulnerable dependencies", "cmd": "npm audit"}], "ansible_loop_var": "item"}, {"changed": true, "stdout": "\n> api-testing-example@1.0.0 lint\n> npx eslint .\n\n\n/home/vagrant/valid-project/test/service.test.js\n  29:11  error  'response' is assigned a value but never used  no-unused-vars\n\n\u2716 1 problem (1 error, 0 warnings)", "stderr": "", "rc": 1, "cmd": "npm run lint", "start": "2023-03-25 13:55:03.220776", "end": "2023-03-25 13:55:04.395635", "delta": "0:00:01.174859", "failed": true, "msg": "non-zero return code", "invocation": {"module_args": {"chdir": "/home/vagrant/valid-project", "_raw_params": "npm run lint", "_uses_shell": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "executable": null, "creates": null, "removes": null, "stdin": null}}, "stdout_lines": ["", "> api-testing-example@1.0.0 lint", "> npx eslint .", "", "", "/home/vagrant/valid-project/test/service.test.js", "  29:11  error  'response' is assigned a value but never used  no-unused-vars", "", "\u2716 1 problem (1 error, 0 warnings)"], "stderr_lines": [], "item": [{"name": "dependencies", "jobs": [{"name": "clean install", "cmd": "npm ci --ignore-scripts"}, {"name": "check vulnerable dependencies", "cmd": "npm audit"}, {"name": "check coding style", "cmd": "npm run lint"}]}, {"name": "check coding style", "cmd": "npm run lint"}], "ansible_loop_var": "item"}, {"changed": true, "stdout": "\n> api-testing-example@1.0.0 test\n> jest test/**.test.js --verbose --silent", "stderr": "FAIL test/service.test.js\n  should test Service\n    \u2715 when #list method succeeds (7 ms)\n    \u2713 when #list method fails (1 ms)\n\n  \u25cf should test Service \u203a when #list method succeeds\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n      Object {\n    -   \"field\": \"field\",\n    +   \"data\": Object {\n    +     \"field\": \"__field\",\n    +   },\n      }\n\n      28 |\n      29 |     const response = await Service.list();\n    > 30 |     expect(__responseData).toEqual(responseData.data);\n         |                            ^\n      31 |     expect(axios.get).toHaveBeenCalledTimes(1);\n      32 |   });\n      33 |\n\n      at Object.<anonymous> (test/service.test.js:30:28)\n\nPASS test/index.test.js\n  should test server configuration\n    \u2713 should run the express server (4 ms)\n\nPASS test/controller.test.js\n  should test controller\n    \u2713 when #getPost method method succeeds (2 ms)\n    \u2713 when #getPost method method fails (3 ms)\n\nPASS test/router.test.js\n  should test router\n    \u2713 should test get posts (2 ms)\n\nTest Suites: 1 failed, 3 passed, 4 total\nTests:       1 failed, 5 passed, 6 total\nSnapshots:   0 total\nTime:        1.283 s", "rc": 1, "cmd": "npm run test", "start": "2023-03-25 13:55:04.592723", "end": "2023-03-25 13:55:06.786560", "delta": "0:00:02.193837", "failed": true, "msg": "non-zero return code", "invocation": {"module_args": {"chdir": "/home/vagrant/valid-project", "_raw_params": "npm run test", "_uses_shell": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "executable": null, "creates": null, "removes": null, "stdin": null}}, "stdout_lines": ["", "> api-testing-example@1.0.0 test", "> jest test/**.test.js --verbose --silent"], "stderr_lines": ["FAIL test/service.test.js", "  should test Service", "    \u2715 when #list method succeeds (7 ms)", "    \u2713 when #list method fails (1 ms)", "", "  \u25cf should test Service \u203a when #list method succeeds", "", "    expect(received).toEqual(expected) // deep equality", "", "    - Expected  - 1", "    + Received  + 3", "", "      Object {", "    -   \"field\": \"field\",", "    +   \"data\": Object {", "    +     \"field\": \"__field\",", "    +   },", "      }", "", "      28 |", "      29 |     const response = await Service.list();", "    > 30 |     expect(__responseData).toEqual(responseData.data);", "         |                            ^", "      31 |     expect(axios.get).toHaveBeenCalledTimes(1);", "      32 |   });", "      33 |", "", "      at Object.<anonymous> (test/service.test.js:30:28)", "", "PASS test/index.test.js", "  should test server configuration", "    \u2713 should run the express server (4 ms)", "", "PASS test/controller.test.js", "  should test controller", "    \u2713 when #getPost method method succeeds (2 ms)", "    \u2713 when #getPost method method fails (3 ms)", "", "PASS test/router.test.js", "  should test router", "    \u2713 should test get posts (2 ms)", "", "Test Suites: 1 failed, 3 passed, 4 total", "Tests:       1 failed, 5 passed, 6 total", "Snapshots:   0 total", "Time:        1.283 s"], "item": [{"name": "unit tests", "jobs": [{"name": "unit tests", "cmd": "npm run test"}]}, {"name": "unit tests", "cmd": "npm run test"}], "ansible_loop_var": "item"}, {"changed": true, "stdout": "", "stderr": "npm ERR! Missing script: \"build\"\nnpm ERR! \nnpm ERR! To see a list of scripts, run:\nnpm ERR!   npm run\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /root/.npm/_logs/2023-03-25T13_55_07_270Z-debug-0.log", "rc": 1, "cmd": "npm run build", "start": "2023-03-25 13:55:06.987465", "end": "2023-03-25 13:55:07.305526", "delta": "0:00:00.318061", "failed": true, "msg": "non-zero return code", "invocation": {"module_args": {"chdir": "/home/vagrant/valid-project", "_raw_params": "npm run build", "_uses_shell": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "executable": null, "creates": null, "removes": null, "stdin": null}}, "stdout_lines": [], "stderr_lines": ["npm ERR! Missing script: \"build\"", "npm ERR! ", "npm ERR! To see a list of scripts, run:", "npm ERR!   npm run", "", "npm ERR! A complete log of this run can be found in:", "npm ERR!     /root/.npm/_logs/2023-03-25T13_55_07_270Z-debug-0.log"], "item": [{"name": "compile code", "jobs": [{"name": "build", "cmd": "npm run build"}]}, {"name": "build", "cmd": "npm run build"}], "ansible_loop_var": "item"}, {"changed": true, "stdout": "", "stderr": "npm ERR! Missing script: \"integration-test\"\nnpm ERR! \nnpm ERR! To see a list of scripts, run:\nnpm ERR!   npm run\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /root/.npm/_logs/2023-03-25T13_55_07_807Z-debug-0.log", "rc": 1, "cmd": "npm run integration-test", "start": "2023-03-25 13:55:07.509460", "end": "2023-03-25 13:55:07.845811", "delta": "0:00:00.336351", "failed": true, "msg": "non-zero return code", "invocation": {"module_args": {"chdir": "/home/vagrant/valid-project", "_raw_params": "npm run integration-test", "_uses_shell": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "executable": null, "creates": null, "removes": null, "stdin": null}}, "stdout_lines": [], "stderr_lines": ["npm ERR! Missing script: \"integration-test\"", "npm ERR! ", "npm ERR! To see a list of scripts, run:", "npm ERR!   npm run", "", "npm ERR! A complete log of this run can be found in:", "npm ERR!     /root/.npm/_logs/2023-03-25T13_55_07_807Z-debug-0.log"], "item": [{"name": "integration-test", "jobs": [{"name": "integration-test", "cmd": "npm run integration-test"}]}, {"name": "integration-test", "cmd": "npm run integration-test"}], "ansible_loop_var": "item"}, {"changed": true, "stdout": "", "stderr": "/bin/sh: 1: docker: not found", "rc": 127, "cmd": "docker build -t my-server:${GIT_COMMIT_HASH} .", "start": "2023-03-25 13:55:08.047050", "end": "2023-03-25 13:55:08.048893", "delta": "0:00:00.001843", "failed": true, "msg": "non-zero return code", "invocation": {"module_args": {"chdir": "/home/vagrant/valid-project", "_raw_params": "docker build -t my-server:${GIT_COMMIT_HASH} .", "_uses_shell": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "executable": null, "creates": null, "removes": null, "stdin": null}}, "stdout_lines": [], "stderr_lines": ["/bin/sh: 1: docker: not found"], "item": [{"name": "docker build", "jobs": [{"name": "docker build", "cmd": "docker build -t my-server:${GIT_COMMIT_HASH} ."}]}, {"name": "docker build", "cmd": "docker build -t my-server:${GIT_COMMIT_HASH} ."}], "ansible_loop_var": "item"}, {"changed": true, "stdout": "", "stderr": "/bin/sh: 1: docker: not found", "rc": 127, "cmd": "docker push my-server:${GIT_COMMIT_HASH}", "start": "2023-03-25 13:55:08.243503", "end": "2023-03-25 13:55:08.245374", "delta": "0:00:00.001871", "failed": true, "msg": "non-zero return code", "invocation": {"module_args": {"chdir": "/home/vagrant/valid-project", "_raw_params": "docker push my-server:${GIT_COMMIT_HASH}", "_uses_shell": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "executable": null, "creates": null, "removes": null, "stdin": null}}, "stdout_lines": [], "stderr_lines": ["/bin/sh: 1: docker: not found"], "item": [{"name": "docker push", "jobs": [{"name": "docker push", "cmd": "docker push my-server:${GIT_COMMIT_HASH}"}]}, {"name": "docker push", "cmd": "docker push my-server:${GIT_COMMIT_HASH}"}], "ansible_loop_var": "item"}], "skipped": false, "changed": true, "failed": true, "msg": "One or more items failed"}